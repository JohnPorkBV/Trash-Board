name: Build and Deploy ASP.NET to Portainer Container

on:
  push:
    branches:
      - main
      - Dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0'

      - name: Restore dependencies
        run: |
          PROJECT_PATH="./Trash-Board/${{ secrets.PROJECT_NAME }}.csproj"
          dotnet restore "$PROJECT_PATH"

      - name: Build project
        run: |
          PROJECT_PATH="./Trash-Board/${{ secrets.PROJECT_NAME }}.csproj"
          dotnet build "$PROJECT_PATH" --no-restore --configuration Release

      - name: Run unit tests
        run: |
          dotnet test "./TestsWebAPIJP/${{ secrets.TEST_PROJECT_NAME }}.csproj" \
            --no-build \
            --configuration Release \
            --logger "trx;LogFileName=test-results.trx" \
            --results-directory ./TestResults
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults/test-results.trx



      - name: Setup EF Tools
        run: |
          dotnet tool install --global dotnet-ef
          dotnet tool restore

      - name: Bundle EF Migrations
        run: |
          PROJECT_PATH="./Trash-Board/${{ secrets.PROJECT_NAME }}.csproj"
          dotnet ef migrations bundle -r linux-x64 --project "$PROJECT_PATH" --output ./efbundle

      - name: Upload EF Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: efbundle
          path: ./efbundle

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download EF Bundle Artifact
        uses: actions/download-artifact@v4
        with:
          name: efbundle
          path: artifacts/efbundle

      - name: Migrate Database
        shell: bash
        run: |
          chmod +x ./artifacts/efbundle/efbundle
          ./artifacts/efbundle/efbundle --connection "${{ secrets.CONNECTION_STRING }}"

      - name: Deploy to Portainer via webhook
        if: success()
        run: curl -X POST ${{ secrets.PORTAINER_WEBHOOK_URL }}
