@page "/register"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using TrashBoard.Services
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager Navigation
@inject CustomLocalizer<TrashBoard.Login> L
@rendermode InteractiveServer

<h3>@L["Title_Register"]</h3>

<EditForm Model="@registerModel" OnValidSubmit="HandleRegister" FormName="Register">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <InputText @bind-Value="registerModel.Username" placeholder=@L["Lable_Username"] class="form-control" />
    <InputText @bind-Value="registerModel.Password" placeholder=@L["Lable_Password"] type="password" class="form-control mt-2" />
    <InputText @bind-Value="registerModel.ConfirmPassword" placeholder=@L["Lable_Confirm_Password"] type="password" class="form-control mt-2" />
    <button class="btn btn-success mt-2" type="submit">@L["Title_Register"]</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@code {
    private RegisterModel registerModel = new();
    private string? errorMessage;

    private async Task HandleRegister()
    {
        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            errorMessage = L["Error_Password_NoMatch"];
            return;
        }

        var user = new IdentityUser { UserName = registerModel.Username, Email = registerModel.Username };
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            await SignInManager.SignInAsync(user, isPersistent: false);
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = string.Join(", ", result.Errors.Select(e => e.Description));
        }
    }

    public class RegisterModel
    {
        [Required]
        public string Username { get; set; } = "";

        [Required]
        [MinLength(6)]
        public string Password { get; set; } = "";

        [Required]
        public string ConfirmPassword { get; set; } = "";
    }
}
